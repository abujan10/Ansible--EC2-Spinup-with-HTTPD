# Prerequisite:
# 1. Install Ansible- Master

# 2. boto3  (Python   boto library )
# 3  An IAM Role with Policy AmazonEC2FullAccess and attach it to the Ansible master instance.

vi ec2spin.yml
---
- name: " Deploy Ec2 with HTTPD"
  hosts: localhost
  vars:
    region: ap-south-1
    image: ami-08f63db601b82ff5f
    instance_type: t2.micro
    subnet: subnet-f7630dbb
    security_group: ansible-sg
    keypair: ec2abu
    exact_count: 1
    hostkey: /home/ec2-user/ansibleclient.pem
  tasks:
    - name: " create security group "
      ec2_group:
        name: "{{ security_group }}"
        description: "ansible-sg"
        region: "{{ region }}"
        rules:
           - proto: tcp
             from_port: 22
             to_port: 22
             cidr_ip: 0.0.0.0/0
           - proto: tcp
             from_port: 80
             to_port: 80
             cidr_ip: 0.0.0.0/0
           - proto: tcp
             from_port: 443
             to_port: 443
             cidr_ip: 0.0.0.0/0
        rules_egress:
           - proto: all
             cidr_ip: 0.0.0.0/0
             
    - name: "Ec2 spinup"
      ec2:
        instance_type: "{{ instance_type }}"
        region: "{{ region }}"
        image: "{{ image }}"
        key_name: "{{ keypair }}"
        group: "{{ security_group }}"
        vpc_subnet_id: "{{ subnet }}"
        wait: yes
        wait_timeout: 180
        count_tag:
         Name: "Ansible_Ec2"      
        instance_tags:
          Name: "Ansible_Ec2"
        exact_count: "{{exact_count}}"  
      register: ec2_status
    
    - name: "Adding host to inventory"
      add_host:
        hostname: "webserver"
        ansible_host: "{{ ec2_status.instances.0.public_ip }}"
        ansible_port: 22
        ansible_user: "ec2-user"
        ansible_ssh_private_key_file: "{{ hostkey }}"
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no" 

    - name: "open sshd - waiting"
      wait_for:
        port: 22
        host: "{{ ec2_status.instances.0.public_ip }}"
        timeout: 80
        state: started
        delay: 10   

    - name: "install httpd"
      delegate_to: "webserver"
      become: true
      yum:
       name: httpd
       state: present
    
    - name: "index page"
      delegate_to: "webserver"
      become: true
      copy:
        content: " Test page"
        dest: "/var/www/html/index.html"
    
    - name: " Restart and enable httpd"
      delegate_to: "webserver"
      become: true
      service:
        name: httpd
        state: restarted
        enabled: true        
        

